// Generated by CoffeeScript 1.10.0
$(document).ready(function() {
  var $main, $nav_activites, History, deploy_two, root, success, undeploy_two, updateData;
  $nav_activites = $('#nav-activites');
  $main = $('main');
  root = typeof exports !== "undefined" && exports !== null ? exports : this;
  root.nav_activites_left = $nav_activites.css('left');
  root.main_left = $main.css('left');
  deploy_two = function() {
    var tl;
    tl = new TimelineMax({
      tweens: [
        TweenMax.to($nav_activites, 1, {
          left: (parseInt(root.nav_activites_left) + parseInt($(window).width()) * 0.13) + "px",
          ease: Power4.easeOut
        }), TweenMax.to($main, 1, {
          left: (parseInt(root.main_left) + parseInt($(window).width()) * 0.08) + "px",
          opacity: 0.15,
          ease: Power4.easeOut
        })
      ]
    });
  };
  undeploy_two = function() {
    var tl;
    tl = new TimelineMax({
      tweens: [
        TweenMax.to($nav_activites, 1, {
          left: root.nav_activites_left,
          ease: Power4.easeOut
        }), TweenMax.to($main, 1, {
          left: root.main_left,
          opacity: 1,
          ease: Power4.easeOut
        })
      ]
    });
  };
  $('#activites a').mouseenter(deploy_two);
  $nav_activites.mouseleave(undeploy_two);
  $('#accueil a').mouseenter(undeploy_two);
  $('#depannage a').mouseenter(undeploy_two);
  $(window).resize(function() {
    $main.attr('style', "");
    $nav_activites.attr('style', "");
    root.nav_activites_left = $nav_activites.css("left");
    root.main_left = $main.css("left");
  });
  History = window.History;
  if (!History.enabled) {
    return false;
  }
  History.Adapter.bind(window, 'statechange', function() {
    var State, cible;
    State = History.getState();
    cible = State.data.target;
    return $.ajax({
      url: "html/" + cible,
      success: success
    });
  });
  $('#navigation').on('click', 'a', function(event) {
    var lien;
    event.preventDefault();
    lien = $(this).attr('href');
    if (lien !== '#') {
      return History.pushState({
        target: lien
      }, $(this).attr('data-titre'), lien);
    }
  });
  success = function(data, status, xml) {
    var timeline;
    timeline = new TimelineMax();
    timeline.to($main, 0.4, {
      opacity: 0,
      onComplete: updateData,
      onCompleteParams: [data]
    });
    timeline.call(undeploy_two);
    timeline.to($main, 0.4, {
      opacity: 1
    });
  };
  return updateData = function(data) {
    $(window).scrollTop(0);
    $main.html(data);
  };
});
